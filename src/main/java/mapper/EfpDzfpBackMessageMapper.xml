<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Dao.EfpDzfpBackMessageMapper">
    <resultMap id="BaseResultMap" type="model.EfpDzfpBackMessage">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="kprId" property="kprid" jdbcType="VARCHAR"/>
        <result column="nsrsbh" property="nsrsbh" jdbcType="VARCHAR"/>
        <result column="sendurl" property="sendurl" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="parm1" property="parm1" jdbcType="VARCHAR"/>
        <result column="parm2" property="parm2" jdbcType="VARCHAR"/>
        <result column="parm3" property="parm3" jdbcType="VARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cd_efp_dzfp_backmessage
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, kprId, nsrsbh, sendurl, type, parm1, parm2, parm3
    from cd_efp_dzfp_backmessage
  </select>

    <select id="selectSelective" resultMap="BaseResultMap" parameterType="model.EfpDzfpBackMessage">
        select id, kprId, nsrsbh, sendurl, type, parm1, parm2, parm3
        from cd_efp_dzfp_backmessage
        <where>
            <if test="id != null">id = #{id,jdbcType=BIGINT}</if>
            <if test="kprid != null">and kprId = #{kprid,jdbcType=VARCHAR}</if>
            <if test="nsrsbh != null">and nsrsbh = #{nsrsbh,jdbcType=VARCHAR}</if>
            <if test="sendurl != null">and sendurl = #{sendurl,jdbcType=VARCHAR}</if>
            <if test="type != null">and type = #{type,jdbcType=INTEGER}</if>
            <if test="parm1 != null">and parm1 = #{parm1,jdbcType=VARCHAR}</if>
            <if test="parm2 != null">and parm2 = #{parm2,jdbcType=VARCHAR}</if>
            <if test="parm3 != null">and parm3 = #{parm3,jdbcType=VARCHAR}</if>
        </where>
    </select>

    <insert id="insertSelective" parameterType="model.EfpDzfpBackMessage" useGeneratedKeys="true">

        <selectKey keyProperty="id" order="BEFORE" resultType="String">
            select replace(uuid(),'-','') from dual
        </selectKey>

        insert into cd_efp_dzfp_backmessage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="kprid != null">kprId,</if>
            <if test="nsrsbh != null">nsrsbh,</if>
            <if test="sendurl != null">sendurl,</if>
            <if test="type != null">type,</if>
            <if test="parm1 != null">parm1,</if>
            <if test="parm2 != null">parm2,</if>
            <if test="parm3 != null">parm3,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=BIGINT},</if>
            <if test="kprid != null">#{kprid,jdbcType=VARCHAR},</if>
            <if test="nsrsbh != null">#{nsrsbh,jdbcType=VARCHAR},</if>
            <if test="sendurl != null">#{sendurl,jdbcType=VARCHAR},</if>
            <if test="type != null">#{type,jdbcType=INTEGER},</if>
            <if test="parm1 != null">#{parm1,jdbcType=VARCHAR},</if>
            <if test="parm2 != null">#{parm2,jdbcType=VARCHAR},</if>
            <if test="parm3 != null">#{parm3,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="model.EfpDzfpBackMessage">
        update cd_efp_file_repository
        <set>
            <if test="id != null and id != ''">id = #{id,jdbcType=BIGINT},</if>
            <if test="kprid != null and kprid != ''">kprId = #{kprid,jdbcType=VARCHAR},</if>
            <if test="nsrsbh != null and nsrsbh != ''">nsrsbh = #{nsrsbh,jdbcType=VARCHAR},</if>
            <if test="sendurl != null and sendurl != ''">sendurl = #{sendurl,jdbcType=VARCHAR},</if>
            <if test="type != null and type != ''">type = #{type,jdbcType=INTEGER},</if>
            <if test="parm1 != null and parm1 != ''">parm1 = #{parm1,jdbcType=VARCHAR},</if>
            <if test="parm2 != null and parm2 != ''">parm2 = #{parm2,jdbcType=VARCHAR},</if>
            <if test="parm3 != null and parm3 != ''">parm3 = #{parm3,jdbcType=VARCHAR},</if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

</mapper>